model Appointment {
    id String @id @default(uuid())

    userId String? @map("user_id")
    user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

    contactName  String? @map("contact_name")
    contactEmail String? @map("contact_email")
    contactPhone String? @map("contact_phone")

    providerScheduleId String           @map("provider_schedule_id")
    providerSchedule   ProviderSchedule @relation(fields: [providerScheduleId], references: [id])

    serviceId String  @map("service_id")
    service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

    startTime DateTime @map("start_time")
    endTime   DateTime @map("end_time")

    status    AppointmentStatus @default(PENDING)
    createdAt DateTime          @default(now()) @map("created_at")
    updatedAt DateTime          @updatedAt @map("updated_at")

    @@unique([providerScheduleId, startTime], map: "provider_schedule_id_start_time_unique")
    @@map("appointments")
}

enum AppointmentStatus {
    PENDING
    CONFIRMED
    CANCELLED
    COMPLETED

    @@map("appointment_status")
}
